diff --git a/unibilium.h b/unibilium.h
index 7d78fa1..67e704a 100644
--- a/unibilium.h
+++ b/unibilium.h
@@ -627,4 +627,7 @@ void unibi_format(
 
 size_t unibi_run(const char *, unibi_var_t [9], char *, size_t);
 
+typedef unibi_term *Unibi_Fallback_Func(const char*);
+void unibi_set_fallback(Unibi_Fallback_Func *);
+
 #endif /* GUARD_UNIBILIUM_H_ */
diff --git a/uniutil.c b/uniutil.c
index 2e266a7..11a56e1 100644
--- a/uniutil.c
+++ b/uniutil.c
@@ -39,6 +39,12 @@ enum {MAX_BUF = 4096};
 
 const char *const unibi_terminfo_dirs = TERMINFO_DIRS;
 
+static Unibi_Fallback_Func *fallback_func = NULL;
+
+void unibi_set_fallback(Unibi_Fallback_Func *func) {
+  fallback_func = func;
+}
+
 unibi_term *unibi_from_fp(FILE *fp) {
     char buf[MAX_BUF];
     size_t n, r;
@@ -175,9 +181,10 @@ unibi_term *unibi_from_term(const char *term) {
     unibi_term *ut;
     const char *env;
 
-    assert(term != NULL);
-
     if (term[0] == '\0' || term[0] == '.' || strchr(term, '/')) {
+        if (fallback_func) {
+            return fallback_func(term);
+        }
         errno = EINVAL;
         return NULL;
     }
@@ -194,17 +201,29 @@ unibi_term *unibi_from_term(const char *term) {
     }
 
     if ((env = getenv("TERMINFO_DIRS"))) {
-        return from_dirs(env, term);
+        ut = from_dirs(env, term);
+        if (ut) {
+            return ut;
+        }
+    } else {
+        ut = from_dirs(unibi_terminfo_dirs, term);
+        if (ut) {
+            return ut;
+        }
     }
 
-    return from_dirs(unibi_terminfo_dirs, term);
+    return fallback_func ? fallback_func(term) : NULL;
 }
 
 unibi_term *unibi_from_env(void) {
     const char *term = getenv("TERM");
     if (!term) {
-        errno = ENOENT;
-        return NULL;
+        if (fallback_func) {
+            return fallback_func(term);
+        } else {
+            errno = ENOENT;
+            return NULL;
+        }
     }
 
     return unibi_from_term(term);
